package org.example.safecode.enums;

public enum VulnerabilityType {
    // OWASP Top 10 Vulnerabilities
    SQL_INJECTION,              // Covers both OWASP and HIPAA
    BROKEN_ACCESS_CONTROL,
    BROKEN_AUTHENTICATION,
    INSECURE_DESERIALIZATION,
    CROSS_SITE_SCRIPTING,
    SECURITY_MISCONFIGURATION,
    SENSITIVE_DATA_EXPOSURE,
    INSUFFICIENT_LOGGING_AND_MONITORING,
    SERVER_SIDE_REQUEST_FORGERY,
    XML_EXTERNAL_ENTITIES,

    // HIPAA-Specific Compliance Rules
    ENCRYPTION_IN_TRANSIT,      // Encrypt data in transit using TLS
    ENCRYPTION_AT_REST,         // Encrypt data at rest with AES-256 encryption
    ROLE_BASED_ACCESS_CONTROL,  // RBAC implementation
    AUDIT_LOGGING,              // Maintain logs of PHI access and modifications
    MULTI_FACTOR_AUTHENTICATION,// MFA for user authentication
    DATA_INTEGRITY_CHECKS,      // Verify data integrity with hash functions
    SECURE_API_AUTHENTICATION,  // Use OAuth 2.0 or JWT for API authentication
    SERVER_HARDENING,           // Regular server patching and hardening
    MINIMUM_PH_DATA_ACCESS,     // Limit PHI access to minimum necessary
    BUSINESS_ASSOCIATE_AGREEMENT;// Ensure HIPAA-compliant hosting with BAAs

    // Add additional vulnerability or compliance types as needed
    @Override
    public String toString() {
        String name = name().toLowerCase().replace('_', ' ');
        String[] words = name.split(" ");
        StringBuilder readableName = new StringBuilder();
        for (String word : words) {
            readableName.append(Character.toUpperCase(word.charAt(0)))
                    .append(word.substring(1))
                    .append(" ");
        }
        return readableName.toString().trim();
    }
}
